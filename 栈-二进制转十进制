#include <iostream>
using namespace std;

struct sqstack
{
	int *rear;
	int *top;
	int stacksize=20;
};


void initstack(sqstack *s)
{
	s->rear = new int[20];
	if (!s->rear)
	{
		exit(0);
	}
	s->top = s->rear;
	s->stacksize = 20;

}
void push(sqstack *s,char e)
{
	if (s->top - s->rear >= s->stacksize)//虽然是地址相减，但得到的是个数
	{
		return;
	}
	*(s->top) = e;
	s->top++;//->与++同优先级
}

void pop(sqstack *s, char *e)//变量e指向的内容要不断的改变，因此要用指针
{
	if (s->top == s->rear)
	{
		return;
	}
	
	*e = *(--(s->top));
}

int stacklen(sqstack *s)
{
	int a;
	a = s->top - s->rear;
	return a;
}

int main()
{
	char c;
	sqstack jdg;
	int len, i;
	int sum = 0;
	
	initstack(&jdg);
	cout << "请输入二进制数，以#结束！" << endl;
	cin >> c;
	while (c !='#')
	{
		push(&jdg, c);
		cin >> c;
	}
	getchar();//把回车从缓冲区去掉  getchar专门用来读取回车符号
	len = stacklen(&jdg);
	cout << "栈的当前容量是：" << len << endl;
	for (int i = 0; i < len; i++)
	{
		pop(&jdg, &c);
		sum = sum + (c-48 )*pow(2, i);
	}
	cout << "转化为十进制数是:" << sum << endl;
	return 0;
}
